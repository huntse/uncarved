<!DOCTYPE html
PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
    <!-- turn this into html5 -->
    <head><script src="//archive.org/includes/analytics.js?v=cf34f82" type="text/javascript"></script>
<script type="text/javascript">window.addEventListener('DOMContentLoaded',function(){var v=archive_analytics.values;v.service='wb';v.server_name='wwwb-app56.us.archive.org';v.server_ms=204;archive_analytics.send_pageview({});});</script><script type="text/javascript" src="/_static/js/playback.bundle.js?v=R56vIgLu" charset="utf-8"></script>
<script type="text/javascript" src="/_static/js/wombat.js?v=cRqOKCOw" charset="utf-8"></script>
<script type="text/javascript">
if (window._WBWombatInit) {
  wbinfo = {}
  wbinfo.url = "http://www.uncarved.com/articles/function_script";
  wbinfo.timestamp = "20160512183117";
  wbinfo.request_ts = "20160512183117";
  wbinfo.prefix = "https://web.archive.org/web/";
  wbinfo.mod = "if_";
  wbinfo.is_framed = false;
  wbinfo.is_live = false;
  wbinfo.coll = "web";
  wbinfo.proxy_magic = "";
  wbinfo.static_prefix = "/_static/";
  wbinfo.enable_auto_fetch = true;
  wbinfo.auto_fetch_worker_prefix = "https://web.archive.org/web/";
  wbinfo.wombat_ts = "20160512183117";
  wbinfo.wombat_sec = "1463077877";
  wbinfo.wombat_scheme = "https";
  wbinfo.wombat_host = "www.uncarved.com";
  wbinfo.ignore_prefixes = ["/__wb/",
                            "/_static/",
                            "/web/",
                            "http://analytics.archive.org/",
                            "https://analytics.archive.org/",
                            "//analytics.archive.org/",
                            "http://archive.org/",
                            "https://archive.org/",
                            "//archive.org/",
                            "http://faq.web.archive.org/",
                            "http://web.archive.org/",
                            "https://web.archive.org/"
                            ];
  wbinfo.wombat_opts = {};
  window._WBWombatInit(wbinfo);
}
__wm.init("https://web.archive.org/web");
</script>
<link rel="stylesheet" type="text/css" href="/_static/css/banner-styles.css?v=_99BHQfY" />
<link rel="stylesheet" type="text/css" href="/_static/css/iconochive.css?v=qtvMKcIJ" />
<!-- End Wayback Rewrite JS Include -->

        <meta http-equiv="content-type" content="text/html;charset=utf-8"/>
        <meta name="Author" content="Sean Hunter"/>
        <meta name="MSSmartTagsPreventParsing" content="TRUE"/>
        <meta name="description" content="Sometimes its handy to have shell functions that can be sourced, but can also be executables in their own right.  Here's how."/>
		<link rel="stylesheet" type="text/css" href="/web/20160512183117cs_/http://www.uncarved.com/static/style.css"/>
        <link rel="self" type="text/html" href="http://www.uncarved.com/articles/function_script"/>
        <title>The Uncarved Blog: Shell Functions that are also executables</title>
	</head>

	<body>
		<div id="left_menu">
			<ul>
                <li><a href="https://web.archive.org/web/20160512183117/http://www.uncarved.com/articles/function_script">permalink</a></li>
                <li><a href="https://web.archive.org/web/20160512183117/http://www.uncarved.com/">top</a></li>
                
				<li><a href="/web/20160512183117/http://www.uncarved.com/articles/contact">contact me</a></li>
				<li><a href="/web/20160512183117/http://www.uncarved.com/login/" rel="nofollow">not logged in</a></li>
                
			</ul>
		</div>
		<div class="body">
            
			<h2>
                
                Shell Functions that are also executables
			</h2>
            

            
            <div class="precis">Sometimes its handy to have shell functions that can be sourced, but can also be executables in their own right.  Here&#39;s how.</div>
            

            <p>Sometimes it's useful to have shell functions that can be used both from within my current shell and sourced inside scripts which I write.  To achieve this is fairly easy if you arrange things according to a simple convention.  What I do is to make a directory called "lib" in my homedir, and put each function into a seperate file in there that has the same name as the function.</p>
<p>For example, I wrote a small function to print the name of the file in a given directory that has most recently been modified.  To make this more generic, I got it to print the n-th from last, rather than specifically the last.  So I make a small file called <code>~/lib/printlastfile</code> containing the following:</p>
<pre><code># vim: set syn=zsh:

#if no args are supplied, print the last filename from $TMP
#if one arg, print the n-th from last filename from $TMP
#if two args, the second arg is the name of a dir to use instead of TMP
printlastfile()
{
    RANK=${1:-1}
    #expand $TMPDIR and append a trailing slash if it doesn't have one
    DIR=$( echo ${2:-${TMPDIR:-'/tmp/'}} | sed 's,[^/]$,&amp;/,' )

    ls -t "${DIR}"* | sed -n "${RANK}p;${RANK}q"
}
</code></pre>
<p>So any time I want that function I can just source that file.  Now say I want an executable that runs <code>printlastfile</code>.  I could make <code>~/bin/printlastfile</code> as follows:</p>
<pre><code>#!/bin/zsh
. ~/lib/printlastfile
printlastfile "${1}" "${2}"
</code></pre>
<p>... but that gets a bit tedious when you have a few of these things so I made one generic executable that for any function, will source the function and then run it.  I call it <code>libsquiggle</code> because it turns things which are in squiggle/lib into executables and it looks like this:</p>
<pre><code>#!/usr/bin/env zsh

MYNAME="${0:t}"
. "${HOME}/lib/${MYNAME}"

$MYNAME "$@"
</code></pre>
<p>So I make an executable called <code>libsquiggle</code> that looks like that and for any function in ~/lib that I want to work as an executable I make a symlink in ~/bin called the name of the function and pointing to <code>~/bin/libsquiggle</code>. Thus:</p>
<pre><code>ls -l =printlastfile                                                                  
lrwxrwxrwx  1 sean sean 11 Oct  5  2005 /home/huntse/bin/printlastfile -&gt; libsquiggle
</code></pre>
		<hr/>
        <p class="footer">
        
        <span id="tags">Tags:
            
            <a href="https://web.archive.org/web/20160512183117/http://www.uncarved.com/tags/computers">computers</a>
            
        </span>
        
        Last modified: 2006-04-30T14:03:35Z</p>
        <p class="tagline">Unless otherwise specified the contents of this page are copyright &copy; 2015 <a href="https://web.archive.org/web/20160512183117/mailto:sean@uncarved.com">Sean Hunter</a>.  This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International <a rel="license" href="https://web.archive.org/web/20160512183117/http://creativecommons.org/licenses/by-sa/4.0/">License</a>.
        <!-- figure out metadata -->
	</p>
		</div>
    </body>
</html><!--
     FILE ARCHIVED ON 18:31:17 May 12, 2016 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 07:03:11 Jul 30, 2020.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
<!--
playback timings (ms):
  RedisCDXSource: 0.722
  CDXLines.iter: 21.382 (3)
  exclusion.robots.policy: 0.156
  PetaboxLoader3.datanode: 38.464 (4)
  esindex: 0.011
  exclusion.robots: 0.167
  load_resource: 80.785
  PetaboxLoader3.resolve: 112.38 (3)
  captures_list: 116.653
  LoadShardBlock: 90.895 (3)
-->